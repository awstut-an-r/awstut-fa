AWSTemplateFormatVersion: 2010-09-09

Parameters:
  #BranchName:
  #  Type: String
    
  #BucketArn:
  #  Type: String

  BucketName:
    Type: String
    
  #ContainerName:
  #  Type: String
    
  #ECRRepositoryName:
  #  Type: String
    
  #ECSClusterName:
  #  Type: String
  #  
  #ECSFunctionName:
  #  Type: String
  #  
  #ECSServiceName:
  #  Type: String
  #  
  #ImageDefinitionFileName:
  #  Type: String
    
  #PipelineBuildArtifact:
  #  Type: String
  
  #PipelineSourceArtifact:
  #  Type: String
    
  Prefix:
    Type: String
    
  ProjectEnvironmentComputeType:
    Type: String
    
  ProjectEnvironmentImage:
    Type: String
    
  ProjectEnvironmentType:
    Type: String
    
  #ReportName:
  #  Type: String
  #  
  #SSMParameterDockerHubPassword:
  #  Type: String
  #  
  #SSMParameterDockerHubUsername:
  #  Type: String
    
  #TopicArn:
  #  Type: String
    

Resources:
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties: 
      Artifacts:
        Type: NO_ARTIFACTS
      Cache: 
        Type: NO_CACHE
      Environment: 
        ComputeType: !Ref ProjectEnvironmentComputeType
        EnvironmentVariables:
        #  - Name: CONTAINER_NAME
        #    Type: PLAINTEXT
        #    Value: !Ref ContainerName
        #  - Name: DOCKERHUB_PASSWORD
        #    Type: PARAMETER_STORE
        #    Value: !Ref SSMParameterDockerHubPassword
        #  - Name: DOCKERHUB_USERNAME
        #    Type: PARAMETER_STORE
        #    Value: !Ref SSMParameterDockerHubUsername
        #  - Name: REPORT_NAME
        #    Type: PLAINTEXT
        #    Value: !Ref ReportName
          - Name: BUCKET_NAME
            Type: PLAINTEXT
            Value: !Ref BucketName
          - Name: VIDEO_ID
            Type: PLAINTEXT
            Value: ""
        Image: !Ref ProjectEnvironmentImage
        ImagePullCredentialsType: CODEBUILD
        Type: !Ref ProjectEnvironmentType
        #PrivilegedMode: true
      #FileSystemLocations: 
      #  - ProjectFileSystemLocation
      LogsConfig: 
        CloudWatchLogs:
          GroupName: !Ref CodeBuildLogGroup
          Status: ENABLED
          #StreamName: 
        #S3Logs:
        #  Status: DISABLED
      Name: !Sub "${Prefix}-project"
      #QueuedTimeoutInMinutes: 480
      #ResourceAccessRole: String
      #SecondaryArtifacts: 
      #  - Artifacts
      #SecondarySources: 
      #  - Source
      #SecondarySourceVersions: 
      #  - ProjectSourceVersion
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source: 
        #Type: CODEPIPELINE
        Type: NO_SOURCE
        BuildSpec: !Sub |
          version: 0.2
          
          phases:
            install:
              commands:
                - pip3 install yt-dlp
            build:
              commands:
                - echo $VIDEO_ID
                - yt-dlp -o /tmp/$VIDEO_ID.mp4 $VIDEO_ID
                
                - ls -al /tmp
                - aws s3 cp /tmp/$VIDEO_ID.mp4 s3://$BUCKET_NAME/
      Visibility: PRIVATE
      
  CodeBuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: !Sub "${Prefix}-codebuild"
  
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      #ManagedPolicyArns:
      #  - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              #- Effect: Allow
              #  Action:
              #    - ssm:GetParameters
              #  Resource:
              #    - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${SSMParameterDockerHubPassword}"
              #    - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${SSMParameterDockerHubUsername}"
              - Effect: Allow
                Action:
                  - s3:PutObject
                  #- s3:GetObject
                  #- s3:GetObjectVersion
                  #- s3:GetBucketAcl
                  #- s3:GetBucketLocation
                Resource:
                  #- !Ref BucketArn
                  #- !Sub "${BucketArn}/*"
                  #- !Sub "arn:aws:s3:::${BucketName}"
                  - !Sub "arn:aws:s3:::${BucketName}/*"
              #- Effect: Allow
              #  Action:
              #    - codebuild:CreateReportGroup
              #    - codebuild:CreateReport
              #    - codebuild:UpdateReport
              #    - codebuild:BatchPutTestCases
              #    - codebuild:BatchPutCodeCoverages
              #  Resource:
              #    - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${CodeBuildLogGroup}"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${CodeBuildLogGroup}:log-stream:*"
              #- Effect: Allow
              #  Action:
              #    - codebuild:CreateReportGroup
              #    - codebuild:CreateReport
              #    - codebuild:UpdateReport
              #    - codebuild:BatchPutTestCases
              #    - codebuild:BatchPutCodeCoverages
              #  Resource:
              #    - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/*"
              
  #CodeDeployApplication:
  #  Type: AWS::CodeDeploy::Application
  #  Properties:
  #    ApplicationName: !Sub Prefix
  #    ComputePlatform: ECS
  
  
Outputs:
  #CodeBuildProjectArn:
  #  Value: !GetAtt CodeBuildProject.Arn
  
  CodeBuildProjectName:
    Value: !Ref CodeBuildProject