AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: [bucket-name]
    
  Prefix:
    Type: String
    Default: fa-151

  InstanceImageId:
    Type: String
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-arm64
    
  InstanceType:
    Type: String
    Default: t4g.nano

  TopicName:
    Type: String
    Default: test/topic
    
    
Resources:
  IoTStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-iot.yaml"
      Parameters:
        Prefix: !Ref Prefix
        TopicName: !Ref TopicName

  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc.yaml"
      Parameters:
        AvailabilityZone1: a
        CidrIp1: 10.0.1.0/24
        Prefix: !Ref Prefix
        VPCCidrBlock: 10.0.0.0/16
        
  EC2Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - IoTStack
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ec2.yaml"
      Parameters:
        ImageId: !Ref InstanceImageId
        InstanceSecurityGroup: !GetAtt VPCStack.Outputs.InstanceSecurityGroup
        InstanceType: !Ref InstanceType
        Policy: !GetAtt IoTStack.Outputs.Policy
        Prefix: !Ref Prefix
        PublicSubnet1: !GetAtt VPCStack.Outputs.PublicSubnet1
        Thing: !GetAtt IoTStack.Outputs.Thing
        TopicName: !Ref TopicName
