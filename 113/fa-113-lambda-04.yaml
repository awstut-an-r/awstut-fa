AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Architecture:
    Type: String

  Handler:
    Type: String
  
  Prefix:
    Type: String
    
  Runtime:
    Type: String


Resources:
  Function4:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - !Ref Architecture
      Code:
        ZipFile: |
          import pprint
          
          def lambda_handler(event, context):
            pprint.pprint(event)
      #Environment:
      #  #Variables:
      #  #  #MAX_NUMBER_OF_MESSAGES: !Ref SQSMaxNumberOfMessages
      #  #  #QUEUE_NAME: !Ref SQSQueueName
      #  #  REGION: !Ref AWS::Region
      #  #  TOPIC: !Ref TopicArn
      FunctionName: !Sub "${Prefix}-Function4"
      Handler: !Ref Handler
      #Layers:
      #  - !Ref LambdaLayer
      Runtime: !Ref Runtime
      Role: !GetAtt Function4Role.Arn
      #Timeout: !Ref Timeout
      
  Function4Role:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      #Policies:
      #  - PolicyName: SQSReceiveMessagePolicy
      #    PolicyDocument:
      #      Version: 2012-10-17
      #      Statement:
      #        - Effect: Allow
      #          Action:
      #            - sqs:GetQueueUrl
      #            - sqs:ReceiveMessage
      #            #- sqs:DeleteMessage
      #          Resource:
      #            - !Ref SQSQueueArn
      
  #TopicSubscription:
  #  Type: AWS::SNS::Subscription
  #  Properties: 
  #    #DeliveryPolicy: Json
  #    Endpoint: !GetAtt Function3.Arn
  #    #FilterPolicy: Json
  #    #FilterPolicyScope: String
  #    Protocol: lambda
  #    #RawMessageDelivery: Boolean
  #    #RedrivePolicy: Json
  #    #Region: String
  #    #SubscriptionRoleArn: String
  #    TopicArn: !Ref SNSTopicArn
  #    
  #SNSPermission: 
  #  Type: AWS::Lambda::Permission
  #  Properties: 
  #    FunctionName: !Ref Function3
  #    Action: lambda:InvokeFunction
  #    Principal: sns.amazonaws.com
  #    #SourceArn: !Sub "arn:aws:s3:::${BucketName}"
  #    SourceArn: !Ref SNSTopicArn
      
      
Outputs:
  Function4:
    Value: !Ref Function4

  Function4Arn:
    Value: !GetAtt Function4.Arn
