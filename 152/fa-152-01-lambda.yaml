AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Architecture:
    Type: String
    
  Handler:
    Type: String
    
  Prefix:
    Type: String
    
  Runtime:
    Type: String

  SSMServiceRole:
    Type: String
    
  Timeout:
    Type: Number
    
    
Resources:
  CustomResource:
    Type: Custom::CustomResource
    Properties:
      ServiceToken: !GetAtt Function.Arn
      
  Function:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - !Ref Architecture
      Environment:
        Variables:
          #LAYER_PACKAGE: !Ref LayerPackage
          PREFIX: !Ref Prefix
          REGION: !Ref AWS::Region
          SSM_SERVICE_ROLE: !Ref SSMServiceRole
          #URLS_PARAMETER: !Ref UrlsParameter
          #S3_BUCKET: !Ref CodeS3Bucket
          #S3_BUCKET_FOLDER: !Ref Prefix
      Code:
        ZipFile: |
          import boto3
          import cfnresponse
          import os

          #activation_id = os.environ['ACTIVATION_ID']
          prefix = os.environ['PREFIX']
          region = os.environ['REGION']
          ssm_service_role = os.environ['SSM_SERVICE_ROLE']
          
          CREATE = 'Create'
          DELETE = 'Delete'
          response_data = {}
          physical_resource_id = ''
          
          key_name_id = 'ActivationId'
          key_name_code = 'ActivationCode'
          
          ssm_client = boto3.client('ssm', region_name=region)
          
          def lambda_handler(event, context):
            #print(activation_id)
            print(event)
          
            try:
              if event['RequestType'] == CREATE:
                ssm_response = ssm_client.create_activation(
                  #Description='string',
                  DefaultInstanceName=prefix,
                  IamRole=ssm_service_role,
                  #RegistrationLimit=123,
                  #ExpirationDate=datetime(2015, 1, 1),
                  #Tags=[
                  #  {
                  #    'Key': 'string',
                  #    'Value': 'string'
                  #  },
                  #],
                  #RegistrationMetadata=[
                  #  {
                  #    'Key': 'string',
                  #    'Value': 'string'
                  #  },
                  #]
                )
                
                physical_resource_id = ssm_response[key_name_id]
                response_data[key_name_id] = ssm_response[key_name_id]
                response_data[key_name_code] = ssm_response[key_name_code]
              
              elif event['RequestType'] == DELETE:
                physical_resource_id = event['PhysicalResourceId']
                ssm_response = ssm_client.delete_activation(
                  #ActivationId=event['ResourceProperties'][key_name]
                  ActivationId=physical_resource_id
                )
                
              #cfnresponse.send(event, context, cfnresponse.SUCCESS, response_data)
              cfnresponse.send(
                event=event,
                context=context,
                responseStatus=cfnresponse.SUCCESS,
                responseData=response_data,
                physicalResourceId=physical_resource_id
                )
              
            except Exception as e:
              print(e)
              cfnresponse.send(event, context, cfnresponse.FAILED, response_data)
      FunctionName: !Sub "${Prefix}-function"
      Handler: !Ref Handler
      #Layers:
      #  - !Ref LambdaLayer
      Runtime: !Ref Runtime
      Role: !GetAtt FunctionRole.Arn
      Timeout: !Ref Timeout
      
  FunctionRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LambdaFunctionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iam:PassRole
                  - ssm:CreateActivation
                  - ssm:DeleteActivation
                Resource: "*"
                
                
Outputs:
  ActivationId:
    Value: !GetAtt CustomResource.ActivationId
    
  ActivationCode:
    Value: !GetAtt CustomResource.ActivationCode