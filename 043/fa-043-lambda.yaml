AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Handler:
    Type: String
    
  Prefix:
    Type: String
    
  Runtime:
    Type: String
    
    
Resources:
  Function:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import cfnresponse
          import datetime
          
          response_data = {}
          
          def lambda_handler(event, context):
            try:
              now = datetime.datetime.now()
              message = '{datetime} Request Type: {request_type}, Test Resource Property: {property}'.format(
                datetime=now,
                request_type=event['RequestType'],
                property=event['ResourceProperties']['TestProperty'])
              
              print(message)
              response_data['message'] = message
              
              cfnresponse.send(event, context, cfnresponse.SUCCESS, response_data)
            except Exception as e:
              print(e)
              cfnresponse.send(event, context, cfnresponse.FAILED, response_data)
      FunctionName: !Sub "${Prefix}-function"
      Handler: !Ref Handler
      Runtime: !Ref Runtime
      Role: !GetAtt FunctionRole.Arn

  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        
        
Outputs:
  FunctionArn:
    Value: !GetAtt Function.Arn