AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Architecture:
    Type: String

  Handler:
    Type: String

  Policy:
    Type: String

  Prefix:
    Type: String

  Runtime:
    Type: String

  Thing:
    Type: String
    
  ThingGroup:
    Type: String
    
    
Resources:
  CustomResource2:
    Type: Custom::CustomResource
    Properties:
      ServiceToken: !GetAtt Function2.Arn
      Thing: !Ref Thing
      ThingGroup: !Ref ThingGroup

  Function2:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - !Ref Architecture
      Code:
        ZipFile: |
          import boto3
          import cfnresponse

          CREATE = 'Create'
          response_data = {}

          iot_client = boto3.client('iot')
        
          def lambda_handler(event, context):
            try:
              thing = event['ResourceProperties']['Thing']
              thing_group = event['ResourceProperties']['ThingGroup']
            
              if event['RequestType'] == CREATE:
                response = iot_client.add_thing_to_thing_group(
                  thingGroupName=thing_group,
                  thingName=thing
                )

              cfnresponse.send(event, context, cfnresponse.SUCCESS, response_data)
            except Exception as e:
              print(e)

              cfnresponse.send(event, context, cfnresponse.FAILED, response_data)
      FunctionName: !Sub "${Prefix}-function-02"
      Handler: !Ref Handler
      Runtime: !Ref Runtime
      Role: !GetAtt FunctionRole2.Arn

  FunctionRole2:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: FunctionPolicy2
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iot:AddThingToThingGroup
                Resource:
                  - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:thing/${Thing}"
                  - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:thinggroup/${ThingGroup}"

  CustomResource3:
    Type: Custom::CustomResource
    Properties:
      ServiceToken: !GetAtt Function3.Arn
      Policy: !Ref Policy
      ThingGroupArn: !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:thinggroup/${ThingGroup}"
      
  Function3:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - !Ref Architecture
      Code:
        ZipFile: |
          import boto3
          import cfnresponse
          
          CREATE = 'Create'
          response_data = {}
          
          iot_client = boto3.client('iot')
        
          def lambda_handler(event, context):
            try:
              policy = event['ResourceProperties']['Policy']
              thing_group_arn = event['ResourceProperties']['ThingGroupArn']
            
              if event['RequestType'] == CREATE:
                response = iot_client.attach_policy(
                  policyName=policy,
                  target=thing_group_arn
                )
                
              cfnresponse.send(event, context, cfnresponse.SUCCESS, response_data)
            except Exception as e:
              print(e)
              
              cfnresponse.send(event, context, cfnresponse.FAILED, response_data)
      FunctionName: !Sub "${Prefix}-function-03"
      Handler: !Ref Handler
      Runtime: !Ref Runtime
      Role: !GetAtt FunctionRole3.Arn

  FunctionRole3:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: FunctionPolicy3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iot:AttachPolicy
                Resource:
                  - !Sub "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:thinggroup/${ThingGroup}"
