AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: awstut-bucket
    
  Prefix:
    Type: String
    Default: fa-167

  InstanceImageId:
    Type: String
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-arm64
    
  InstanceType:
    Type: String
    Default: t4g.nano
    
  IoTCertificateDir:
    Type: String
    Default: certs
    
  IoTCertificateName:
    Type: String
    Default: device.pem.crt
    
  IoTPrivateKeyName:
    Type: String
    Default: private.pem.key
    
  IoTPublicKeyName:
    Type: String
    Default: public.pem.key

  LambdaArchitecture:
    Type: String
    Default: arm64
    
  LambdaHandler:
    Type: String
    Default: index.lambda_handler
    
  LambdaRuntime:
    Type: String
    Default: python3.12
  
  TopicName:
    Type: String
    Default: test/topic
    
    
Resources:
  S3Stack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-s3.yaml"
      Parameters:
        Prefix: !Ref Prefix

  IoTStack1:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-iot-01.yaml"
      Parameters:
        Prefix: !Ref Prefix
        TopicName: !Ref TopicName
        
  LambdaStack1:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - S3Stack
      - IoTStack1
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-lambda-01.yaml"
      Parameters:
        Architecture: !Ref LambdaArchitecture
        BucketName: !GetAtt S3Stack.Outputs.BucketName
        CertificateName: !Ref IoTCertificateName
        Handler: !Ref LambdaHandler
        Prefix: !Ref Prefix
        PrivateKeyName: !Ref IoTPrivateKeyName
        PublicKeyName: !Ref IoTPublicKeyName
        Runtime: !Ref LambdaRuntime
        Thing: !GetAtt IoTStack1.Outputs.Thing
        
  LambdaStack2:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - IoTStack1
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-lambda-02.yaml"
      Parameters:
        Architecture: !Ref LambdaArchitecture
        Handler: !Ref LambdaHandler
        Policy: !GetAtt IoTStack1.Outputs.Policy
        Prefix: !Ref Prefix
        Runtime: !Ref LambdaRuntime
        Thing: !GetAtt IoTStack1.Outputs.Thing
        ThingGroup: !GetAtt IoTStack1.Outputs.ThingGroup
        
  IoTStack2:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - LambdaStack1
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-iot-02.yaml"
      Parameters:
        CertificateArn: !GetAtt LambdaStack1.Outputs.CertificateArn
        Policy: !GetAtt IoTStack1.Outputs.Policy
        Prefix: !Ref Prefix
        Thing: !GetAtt IoTStack1.Outputs.Thing
        
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc.yaml"
      Parameters:
        AvailabilityZone1: a
        CidrIp1: 10.0.1.0/24
        Prefix: !Ref Prefix
        VPCCidrBlock: 10.0.0.0/16
        
  EC2Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - IoTStack2
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ec2.yaml"
      Parameters:
        BucketName: !GetAtt S3Stack.Outputs.BucketName
        CertificateDir: !Ref IoTCertificateDir
        CertificateName: !Ref IoTCertificateName
        ImageId: !Ref InstanceImageId
        InstanceSecurityGroup: !GetAtt VPCStack.Outputs.InstanceSecurityGroup
        InstanceType: !Ref InstanceType
        IoTEndpoint: !GetAtt LambdaStack1.Outputs.IoTEndpoint
        Policy: !GetAtt IoTStack1.Outputs.Policy
        Prefix: !Ref Prefix
        PrivateKeyName: !Ref IoTPrivateKeyName
        PublicKeyName: !Ref IoTPublicKeyName
        PublicSubnet1: !GetAtt VPCStack.Outputs.PublicSubnet1
        Thing: !GetAtt IoTStack1.Outputs.Thing
        TopicName: !Ref TopicName
