AWSTemplateFormatVersion: 2010-09-09
Parameters:
  DBInstanceEndpointAddress:
    Type: String

  DBMasterUsername:
    Type: String
    
  DBMasterUserPassword:
    Type: String
    
  DBName:
    Type: String

  DomainName:
    Type: String

  ImageBuilderParentImage:
    Type: String

  ImageBuilderPlatform:
    Type: String
    
  ImageBuilderSupportedOsVersion:
    Type: String
    
  ImageBuilderVersion:
    Type: String
    
  InstanceSecurityGroup:
    Type: String
    
  InstanceType:
    Type: String
    
  Prefix:
    Type: String

  PublicSubnet2:
    Type: String
    
  Topic:
    Type: String
    
  WordPressAdminEmail:
    Type: String
    
  WordPressAdminPassword:
    Type: String
    
  WordPressAdminUser:
    Type: String
    
  WordPressTitle:
    Type: String
    

Resources:
  Component:
    Type: AWS::ImageBuilder::Component
    Properties: 
      Data: !Sub |
        schemaVersion: 1.0
        phases:
          - name: build
            steps:
              - name: InstallWordPress
                action: ExecuteBash
                inputs:
                  commands:
                    - yum update -y
                    - yum install -y httpd
                    - amazon-linux-extras enable -y php7.4
                    
                    - yum install -y php php-gd php-mysqlnd php-xmlrpc -y
                    
                    - systemctl start httpd
                    - systemctl enable httpd
                    
                    - cd /var/www/html
                    
                    - curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
                    - chmod +x wp-cli.phar
                    - mv wp-cli.phar /usr/local/bin/wp
                    - wp core download --locale=ja
                    - wp core config --dbname="${DBName}" --dbuser="${DBMasterUsername}" --dbpass="${DBMasterUserPassword}" --dbhost="${DBInstanceEndpointAddress}"
                    - wp core install --url="http://${DomainName}" --title="${WordPressTitle}" --admin_user="${WordPressAdminUser}" --admin_password="${WordPressAdminPassword}" --admin_email="${WordPressAdminEmail}"
      Name: !Sub "${Prefix}-Component"
      Platform: !Ref ImageBuilderPlatform
      SupportedOsVersions: 
        - !Ref ImageBuilderSupportedOsVersion
      Version: !Ref ImageBuilderVersion
      
  ImageRecipe:
    Type: AWS::ImageBuilder::ImageRecipe
    Properties: 
      Components: 
        - ComponentArn: !Ref Component
      Name: !Sub "${Prefix}-ImageRecipe"
      ParentImage: !Ref ImageBuilderParentImage
      Version: !Ref ImageBuilderVersion
      
  InfrastructureConfiguration:
    Type: AWS::ImageBuilder::InfrastructureConfiguration
    Properties: 
      InstanceProfileName: !Ref ImageBuilderRoleProfile
      InstanceTypes: 
        - !Ref InstanceType
      Name: !Sub "${Prefix}-InfrastructureConfiguration"
      SecurityGroupIds: 
        - !Ref InstanceSecurityGroup
      SnsTopicArn: !Ref Topic
      SubnetId: !Ref PublicSubnet2
      
  DistributionConfiguration:
    Type: AWS::ImageBuilder::DistributionConfiguration
    Properties: 
      Distributions: 
        - Region: !Ref AWS::Region
          AmiDistributionConfiguration: {}
      Name: !Sub "${Prefix}-DistributionConfiguration"
        
  ImagePipeline:
    Type: AWS::ImageBuilder::ImagePipeline
    Properties: 
      DistributionConfigurationArn: !Ref DistributionConfiguration
      ImageRecipeArn: !Ref ImageRecipe
      InfrastructureConfigurationArn: !Ref InfrastructureConfiguration
      Name: !Sub "${Prefix}-ImagePipeline"
      Status: ENABLED

  ImageBuilderRoleProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref ImageBuilderRole
        
  ImageBuilderRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - ec2.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/EC2InstanceProfileForImageBuilder

        
Outputs:
  ImagePipelineArn:
    Value: !Ref ImagePipeline
