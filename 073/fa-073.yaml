AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: [bucket-name]
    
  Prefix:
    Type: String
    Default: fa-073
    
  ImageId:
    Type: String
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2
    
  InstanceType:
    Type: String
    Default: t4g.nano
    
  HTTPPort:
    Type: Number
    Default: 80
    
  HTTPSPort:
    Type: Number
    Default: 443
    
  MailAddress:
    Type: String
    Default: mail@example.com
    
  TaskCpu:
    Type: Number
    Default: 512
    
  TaskMemory:
    Type: Number
    Default: 1024


Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc.yaml"
      Parameters:
        AvailabilityZone: a
        CidrIp1: 10.0.1.0/24
        CidrIp2: 10.0.2.0/24
        CidrIp3: 10.0.3.0/24
        HTTPPort: !Ref HTTPPort
        HTTPSPort: !Ref HTTPSPort
        Prefix: !Ref Prefix
        VPCCidrBlock: 10.0.0.0/16

  EndpointStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-endpoint.yaml"
      Parameters:
        ContainerSubnet: !GetAtt VPCStack.Outputs.ContainerSubnet
        EndpointSecurityGroup1: !GetAtt VPCStack.Outputs.EndpointSecurityGroup1
        EndpointSecurityGroup2: !GetAtt VPCStack.Outputs.EndpointSecurityGroup2
        InstanceSubnet: !GetAtt VPCStack.Outputs.InstanceSubnet
        VPC: !GetAtt VPCStack.Outputs.VPC
  
  FargateStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - EndpointStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-fargate.yaml"
      Parameters:
        ContainerSecurityGroup: !GetAtt VPCStack.Outputs.ContainerSecurityGroup
        ContainerSubnet: !GetAtt VPCStack.Outputs.ContainerSubnet
        Prefix: !Ref Prefix
        TaskCpu: !Ref TaskCpu
        TaskMemory: !Ref TaskMemory
        
  SNSStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-sns.yaml"
      Parameters:
        MailAddress: !Ref MailAddress
        Prefix: !Ref Prefix
        
  CloudWatchStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - FargateStack
      - SNSStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-cloudwatch.yaml"
      Parameters:
        ClusterName: !GetAtt FargateStack.Outputs.ClusterName
        ServiceName: !GetAtt FargateStack.Outputs.ServiceName
        TopicArn: !GetAtt SNSStack.Outputs.TopicArn
        
  EC2Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - EndpointStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ec2.yaml"
      Parameters:
        ImageId: !Ref ImageId
        InstanceSecurityGroup: !GetAtt VPCStack.Outputs.InstanceSecurityGroup
        InstanceSubnet: !GetAtt VPCStack.Outputs.InstanceSubnet
        InstanceType: !Ref InstanceType
        Prefix: !Ref Prefix
        
  CustomResourceStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - FargateStack
      - EC2Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-customresource.yaml"
      Parameters:
        Architecture: arm64
        EIPAllocationId: !GetAtt VPCStack.Outputs.EIPAllocationId
        Handler: index.lambda_handler
        IGW: !GetAtt VPCStack.Outputs.IGW
        NATGateway: !GetAtt VPCStack.Outputs.NATGateway
        Prefix: !Ref Prefix
        PrivateRouteTable: !GetAtt VPCStack.Outputs.PrivateRouteTable
        PublicRouteTable: !GetAtt VPCStack.Outputs.PublicRouteTable
        Runtime: python3.8
        Timeout: 300
        VPC: !GetAtt VPCStack.Outputs.VPC
