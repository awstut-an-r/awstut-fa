AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: awstut-bucket
    
  Prefix:
    Type: String
    Default: fa-118
    
  HTTPSPort:
    Type: Number
    Default: 443
    
  ImageId:
    Type: String
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2
    
  InstanceType:
    Type: String
    #Default: t4g.micro
    #Default: t4g.small
    Default: t4g.nano
    
  TagKey:
    Type: String
    Default: CreateImage
    
  TagValue1:
    Type: String
    Default: Group1
    
  TagValue2:
    Type: String
    Default: Group2
    
  WaitForSuccessTimeoutSeconds:
    Type: Number
    Default: 600
    

Resources:
  #S3Stack:
  #  Type: AWS::CloudFormation::Stack
  #  Properties:
  #    TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-s3.yaml"
  #    Parameters:
  #      Prefix: !Ref Prefix
        
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc.yaml"
      Parameters:
        AvailabilityZone1: a
        CidrIp1: 10.0.1.0/24
        #HTTPPort: !Ref HTTPPort
        HTTPSPort: !Ref HTTPSPort
        Prefix: !Ref Prefix
        VPCCidrBlock: 10.0.0.0/16
        
  EndpointStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-endpoint.yaml"
      Parameters:
        EndpointSecurityGroup: !GetAtt VPCStack.Outputs.EndpointSecurityGroup
        #Prefix: !Ref Prefix
        #PrivateRouteTable: !GetAtt VPCStack.Outputs.PrivateRouteTable
        PrivateSubnet: !GetAtt VPCStack.Outputs.PrivateSubnet
        VPC: !GetAtt VPCStack.Outputs.VPC
        
  EC2Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ec2.yaml"
      Parameters:
        #BucketName: !GetAtt S3Stack.Outputs.BucketName
        ImageId: !Ref ImageId
        InstanceSecurityGroup: !GetAtt VPCStack.Outputs.InstanceSecurityGroup
        InstanceType: !Ref InstanceType
        Prefix: !Ref Prefix
        PrivateSubnet: !GetAtt VPCStack.Outputs.PrivateSubnet
        TagKey: !Ref TagKey
        TagValue1: !Ref TagValue1
        TagValue2: !Ref TagValue2
        
  SSMIAMStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ssm-iam.yaml"
      #Parameters:
      #  #BucketName: !GetAtt S3Stack.Outputs.BucketName
        
  SSMStack1:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - EndpointStack
      - EC2Stack
      - SSMIAMStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ssm-01.yaml"
      Parameters:
        #BucketName: !GetAtt S3Stack.Outputs.BucketName
        CreateImageRoleArn: !GetAtt SSMIAMStack.Outputs.CreateImageRoleArn
        #Instance1: !GetAtt EC2Stack.Outputs.Instance1
        #Instance2: !GetAtt EC2Stack.Outputs.Instance2
        Prefix: !Ref Prefix
        TagKey: !Ref TagKey
        TagValue1: !Ref TagValue1
        WaitForSuccessTimeoutSeconds: !Ref WaitForSuccessTimeoutSeconds
        
  SSMStack2:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - EndpointStack
      - EC2Stack
      - SSMIAMStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ssm-02.yaml"
      Parameters:
        #BucketName: !GetAtt S3Stack.Outputs.BucketName
        CreateImageRoleArn: !GetAtt SSMIAMStack.Outputs.CreateImageRoleArn
        #Instance2: !GetAtt EC2Stack.Outputs.Instance2
        #Instance2: !GetAtt EC2Stack.Outputs.Instance2
        Prefix: !Ref Prefix
        TagKey: !Ref TagKey
        TagValue2: !Ref TagValue2
        WaitForSuccessTimeoutSeconds: !Ref WaitForSuccessTimeoutSeconds