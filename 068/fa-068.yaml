AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: awstut-bucket
    
  Prefix:
    Type: String
    Default: fa-068
    
  ImageId:
    Type: String
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2
    
  InstanceType:
    Type: String
    Default: t4g.nano
    
  HTTPPort:
    Type: Number
    Default: 80
    
  HTTPSPort:
    Type: Number
    Default: 443
    
  TaskCpu:
    Type: Number
    Default: 512
    
  TaskMemory:
    Type: Number
    Default: 1024


Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc.yaml"
      Parameters:
        AvailabilityZone1: a
        AvailabilityZone2: c
        AvailabilityZone3: d
        CidrIp1: 10.0.1.0/24
        CidrIp2: 10.0.2.0/24
        CidrIp3: 10.0.3.0/24
        CidrIp4: 10.0.4.0/24
        HTTPPort: !Ref HTTPPort
        HTTPSPort: !Ref HTTPSPort
        Prefix: !Ref Prefix
        VPCCidrBlock: 10.0.0.0/16

  EndpointStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-endpoint.yaml"
      Parameters:
        #ContainerSubnet1: !GetAtt VPCStack.Outputs.ContainerSubnet1
        ContainerSubnet2: !GetAtt VPCStack.Outputs.ContainerSubnet2
        EndpointSecurityGroup1: !GetAtt VPCStack.Outputs.EndpointSecurityGroup1
        EndpointSecurityGroup2: !GetAtt VPCStack.Outputs.EndpointSecurityGroup2
        InstanceSubnet: !GetAtt VPCStack.Outputs.InstanceSubnet
        #Prefix: !Ref Prefix
        ContainerRouteTable2: !GetAtt VPCStack.Outputs.ContainerRouteTable2
        VPC: !GetAtt VPCStack.Outputs.VPC
        
  #ECRStack:
  #  Type: AWS::CloudFormation::Stack
  #  Properties:
  #    TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ecr.yaml"
  #    Parameters:
  #      Prefix: !Ref Prefix
        
  FargateStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - EndpointStack
      #- ECRStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-fargate.yaml"
      Parameters:
        ContainerSecurityGroup: !GetAtt VPCStack.Outputs.ContainerSecurityGroup
        ContainerSubnet1: !GetAtt VPCStack.Outputs.ContainerSubnet1
        ContainerSubnet2: !GetAtt VPCStack.Outputs.ContainerSubnet2
        Prefix: !Ref Prefix
        RepositoryName:
          Fn::ImportValue: !Sub "${Prefix}-RepositoryName"
        TaskCpu: !Ref TaskCpu
        TaskMemory: !Ref TaskMemory
        
  EC2Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
      #- EndpointStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ec2.yaml"
      Parameters:
        ImageId: !Ref ImageId
        InstanceSecurityGroup: !GetAtt VPCStack.Outputs.InstanceSecurityGroup
        InstanceType: !Ref InstanceType
        Prefix: !Ref Prefix
        InstanceSubnet: !GetAtt VPCStack.Outputs.InstanceSubnet
        
  #FargateService1Stack:
  #  Type: AWS::CloudFormation::Stack
  #  DependsOn:
  #    - EndpointStack
  #    #- ECRStack
  #    - FargateStack
  #    - VPCStack
  #  Properties:
  #    TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-fargate-service1.yaml"
  #    Parameters:
  #      Cluster: !GetAtt FargateStack.Outputs.Cluster
  #      FargateTaskExecutionRole: !GetAtt FargateStack.Outputs.FargateTaskExecutionRole
  #      #MyServiceRepository: !GetAtt ECRStack.Outputs.MyServiceRepository
  #      Prefix: !Ref Prefix
  #      ServiceCpu: !Ref ServiceCpu
  #      ServiceMemory: !Ref ServiceMemory
  #      ServiceName: service1
  #      ServiceSecurityGroup: !GetAtt VPCStack.Outputs.ServiceSecurityGroup
  #      #PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
  #      PublicSubnet1: !GetAtt VPCStack.Outputs.PublicSubnet1
        
  #FargateService2Stack:
  #  Type: AWS::CloudFormation::Stack
  #  DependsOn:
  #    #- EndpointStack
  #    #- ECRStack
  #    - FargateStack
  #    - VPCStack
  #  Properties:
  #    TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-fargate-service2.yaml"
  #    Parameters:
  #      Cluster: !GetAtt FargateStack.Outputs.Cluster
  #      FargateTaskExecutionRole: !GetAtt FargateStack.Outputs.FargateTaskExecutionRole
  #      #MyServiceRepository: !GetAtt ECRStack.Outputs.MyServiceRepository
  #      MyServiceRepository:
  #        Fn::ImportValue: !Sub "${Prefix}-MyServiceRepository"
  #      Prefix: !Ref Prefix
  #      ServiceCpu: !Ref ServiceCpu
  #      ServiceMemory: !Ref ServiceMemory
  #      ServiceName: service2
  #      ServiceSecurityGroup: !GetAtt VPCStack.Outputs.ServiceSecurityGroup
  #      #PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
  #      #PublicSubnet1: !GetAtt VPCStack.Outputs.PublicSubnet1
  #      PublicSubnet2: !GetAtt VPCStack.Outputs.PublicSubnet2