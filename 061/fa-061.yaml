AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: awstut-bucket
    
  Prefix:
    Type: String
    Default: fa-061

  AvailabilityZone1:
    Type: String
    Default: a
    
  AvailabilityZone2:
    Type: String
    Default: c

  DBInstanceClass:
    Type: String
    Default: db.t4g.micro
    
  DBName:
    Type: String
    Default: testdb
    
  DBMasterUsername:
    Type: String
    Default: testuser
    
  DBMasterUserPassword:
    Type: String
    Default: Passw0rd
    
  DBTableName:
    Type: String
    Default: Pets

  Timeout:
    Type: Number
    Default: 10
    
    
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc.yaml"
      Parameters:
        AvailabilityZone1: !Ref AvailabilityZone1
        AvailabilityZone2: !Ref AvailabilityZone2
        CidrIp1: 10.0.1.0/24
        CidrIp2: 10.0.2.0/24
        Prefix: !Ref Prefix
        VPCCidrBlock: 10.0.0.0/16

  AuroraStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-aurora.yaml"
      Parameters:
        DBClusterIdentifier: !Sub "${Prefix}-dbcluster"
        DBEngine: aurora-mysql
        DBEngineVersion: 5.7.mysql_aurora.2.07.1
        DBInstanceClass: !Ref DBInstanceClass
        DBInstanceIdentifier: !Sub "${Prefix}-dbinstance"
        DBMasterUsername: !Ref DBMasterUsername
        DBMasterUserPassword: !Ref DBMasterUserPassword
        DBName: !Ref DBName
        DBSecurityGroup: !GetAtt VPCStack.Outputs.DBSecurityGroup
        Prefix: !Ref Prefix
        PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
        PrivateSubnet2: !GetAtt VPCStack.Outputs.PrivateSubnet2
        
  AppSyncStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - AuroraStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-appsync.yaml"
      Parameters:
        DBClusterArn: !GetAtt AuroraStack.Outputs.DBClusterArn
        DBName: !Ref DBName
        Prefix: !Ref Prefix
        SecretArn: !GetAtt AuroraStack.Outputs.SecretArn
        
  LambdaStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - AuroraStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-lambda.yaml"
      Parameters:
        ApiKey: !GetAtt AppSyncStack.Outputs.ApiKey
        Architecture: arm64
        CodeS3Bucket: !Ref TemplateBucketName
        CodeS3Key: !Sub "${Prefix}/deploy.zip"
        DBClusterArn: !GetAtt AuroraStack.Outputs.DBClusterArn
        DBName: !Ref DBName
        DBTableName: !Ref DBTableName
        GraphQLUrl: !GetAtt AppSyncStack.Outputs.GraphQLUrl
        Handler: index.lambda_handler
        LayerS3Key: !Sub "${Prefix}/layer.zip"
        Prefix: !Ref Prefix
        Runtime: python3.8
        SecretArn: !GetAtt AuroraStack.Outputs.SecretArn
        Timeout: !Ref Timeout
        
  CustomResourceStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - LambdaStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-customresource.yaml"
      Parameters:
        FunctionArn: !GetAtt LambdaStack.Outputs.Function2Arn
