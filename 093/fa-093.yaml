AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: [bucket-name]
    
  Prefix:
    Type: String
    Default: fa-093
    
  HTTPPort:
    Type: Number
    Default: 80
    
  ImageId:
    Type: String
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2
    
  InstanceSize:
    Type: Number
    Default: 2
    
  InstanceType:
    Type: String
    Default: t4g.nano

    
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc.yaml"
      Parameters:
        AvailabilityZone1: a
        AvailabilityZone2: d
        CidrIp1: 10.0.1.0/24
        CidrIp2: 10.0.2.0/24
        CidrIp3: 10.0.3.0/24
        CidrIp4: 10.0.4.0/24
        Prefix: !Ref Prefix
        VPCCidrBlock: 10.0.0.0/16
        
  EndpointStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-endpoint.yaml"
      Parameters:
        PrivateRouteTable: !GetAtt VPCStack.Outputs.PrivateRouteTable
        VPC: !GetAtt VPCStack.Outputs.VPC

  NLBStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-nlb.yaml"
      Parameters:
        HTTPPort: !Ref HTTPPort
        Prefix: !Ref Prefix
        PublicSubnet1: !GetAtt VPCStack.Outputs.PublicSubnet1
        PublicSubnet2: !GetAtt VPCStack.Outputs.PublicSubnet2
        VPC: !GetAtt VPCStack.Outputs.VPC
        
        HealthyThresholdCount: 2
        UnhealthyThresholdCount: 2
        HealthCheckIntervalSeconds: 10
        
  LambdaStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - NLBStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-lambda.yaml"
      Parameters:
        Handler: index.lambda_handler
        NLBLoadBalancerName: !GetAtt NLBStack.Outputs.NLBLoadBalancerName
        Prefix: !Ref Prefix
        Runtime: python3.8
        
  AutoScalingStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - NLBStack
      - LambdaStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-autoscaling.yaml"
      Parameters:
        DesiredCapacity: !Ref InstanceSize
        HTTPPort: !Ref HTTPPort
        ImageId: !Ref ImageId
        InstanceType: !Ref InstanceType
        MaxSize: !Ref InstanceSize
        MinSize: !Ref InstanceSize
        NLBPrivateAddress1: !GetAtt LambdaStack.Outputs.NLBPrivateAddress1
        NLBPrivateAddress2: !GetAtt LambdaStack.Outputs.NLBPrivateAddress2
        NLBTargetGroup: !GetAtt NLBStack.Outputs.NLBTargetGroup
        Prefix: !Ref Prefix
        PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
        PrivateSubnet2: !GetAtt VPCStack.Outputs.PrivateSubnet2
        VPC: !GetAtt VPCStack.Outputs.VPC
        
