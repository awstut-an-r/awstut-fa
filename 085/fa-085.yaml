AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: awstut-bucket
    
  Prefix:
    Type: String
    Default: fa-085
    
  #HTTPSPort:
  #  Type: Number
  #  Default: 443
    
  ImageId:
    Type: String
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2
    
  InstanceType:
    Type: String
    Default: t4g.nano
    
  #LambdaHandler:
  #  Type: String
  #  Default: index.lambda_handler
  #  
  #LambdaRuntime:
  #  Type: String
  #  Default: python3.8


Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc.yaml"
      Parameters:
        AvailabilityZone: a
        #AvailabilityZone2: d
        CidrIp1: 10.0.1.0/24
        CidrIp2: 10.0.2.0/24
        #CidrIp3: 10.0.3.0/24
        #CidrIp4: 10.0.4.0/24
        #HTTPPort: !Ref HTTPPort
        #HTTPSPort: !Ref HTTPSPort
        Prefix: !Ref Prefix
        VPCCidrBlock: 10.0.0.0/16
        
  #EndpointStack:
  #  Type: AWS::CloudFormation::Stack
  #  DependsOn:
  #    - VPCStack
  #  Properties:
  #    TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-endpoint.yaml"
  #    Parameters:
  #      #ContainerSubnet: !GetAtt VPCStack.Outputs.ContainerSubnet
  #      EndpointSecurityGroup: !GetAtt VPCStack.Outputs.EndpointSecurityGroup
  #      #EndpointSecurityGroup2: !GetAtt VPCStack.Outputs.EndpointSecurityGroup2
  #      InstanceSubnet: !GetAtt VPCStack.Outputs.InstanceSubnet
  #      #EndpointSecurityGroup: !GetAtt VPCStack.Outputs.EndpointSecurityGroup
  #      #Prefix: !Ref Prefix
  #      #PrivateRouteTable: !GetAtt VPCStack.Outputs.PrivateRouteTable
  #      #PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
  #      #PrivateSubnet2: !GetAtt VPCStack.Outputs.PrivateSubnet2
  #      PrivateRouteTable: !GetAtt VPCStack.Outputs.PrivateRouteTable
  #      VPC: !GetAtt VPCStack.Outputs.VPC
        
  EC2Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    #  - EndpointStack
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ec2.yaml"
      Parameters:
        ImageId: !Ref ImageId
        InstanceSecurityGroup: !GetAtt VPCStack.Outputs.InstanceSecurityGroup
        InstanceSubnet: !GetAtt VPCStack.Outputs.InstanceSubnet
        InstanceType: !Ref InstanceType
        Prefix: !Ref Prefix
        UserData: !Base64 |
          #!/bin/bash -xe
          yum update -y
          amazon-linux-extras install docker
          systemctl start docker
          usermod -a -G docker ec2-user
        
  ECRStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - EC2Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ecr.yaml"
      Parameters:
        #Handler: !Ref LambdaHandler
        InstanceRoleArn1: !GetAtt EC2Stack.Outputs.InstanceRoleArn1
        InstanceRoleArn2: !GetAtt EC2Stack.Outputs.InstanceRoleArn2
        Prefix: !Ref Prefix
        #Runtime: !Ref LambdaRuntime
