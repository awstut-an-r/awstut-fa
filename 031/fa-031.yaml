AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: awstut-bucket
    
  Prefix:
    Type: String
    Default: fa-031
    
  HTTPSPort:
    Type: Number
    Default: 443
    
  ImageId:
    Type: String
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
    
  InstanceType:
    Type: String
    Default: t3a.nano
    
  VPCName1:
    Type: String
    Default: VPC1
    
  VPCName2:
    Type: String
    Default: VPC2
    
    
Resources:
  VPCStack1:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/vpc1/${Prefix}-vpc-01.yaml"
      Parameters:
        AvailabilityZone1: a
        CidrIp1: 10.0.1.0/24
        CidrIp2: 10.0.2.0/24
        Prefix: !Ref Prefix
        VPCCidrBlock: 10.0.0.0/16
        VPCName: !Ref VPCName1
        
  EC2Stack1:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack1
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/vpc1/${Prefix}-ec2-01.yaml"
      Parameters:
        ImageId: !Ref ImageId
        InstanceSecurityGroup: !GetAtt VPCStack1.Outputs.InstanceSecurityGroup
        InstanceType: !Ref InstanceType
        PrivateSubnet: !GetAtt VPCStack1.Outputs.PrivateSubnet
        
  VPCStack2:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/vpc2/${Prefix}-vpc-02.yaml"
      Parameters:
        AvailabilityZone: d
        CidrIp: 10.0.1.0/24
        HTTPSPort: !Ref HTTPSPort
        Prefix: !Ref Prefix
        VPCCidrBlock: 10.0.0.0/16
        VPCName: !Ref VPCName2
        
  EndpointStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack2
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/vpc2/${Prefix}-endpoint.yaml"
      Parameters:
        EndpointSecurityGroup: !GetAtt VPCStack2.Outputs.EndpointSecurityGroup
        PrivateRouteTable: !GetAtt VPCStack2.Outputs.PrivateRouteTable
        PrivateSubnet: !GetAtt VPCStack2.Outputs.PrivateSubnet
        VPC: !GetAtt VPCStack2.Outputs.VPC
        
  EC2Stack2:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack2
      - EndpointStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/vpc2/${Prefix}-ec2-02.yaml"
      Parameters:
        ImageId: !Ref ImageId
        InstanceSecurityGroup: !GetAtt VPCStack2.Outputs.InstanceSecurityGroup
        InstanceType: !Ref InstanceType
        PrivateSubnet: !GetAtt VPCStack2.Outputs.PrivateSubnet
        
  S3Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack1
      - VPCStack2
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-s3.yaml"
      Parameters:
        EIP: !GetAtt VPCStack1.Outputs.EIP
        Prefix: !Ref Prefix
        VPC: !GetAtt VPCStack2.Outputs.VPC
        
  SSMStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - S3Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ssm.yaml"
      Parameters:
        Bucket: !GetAtt S3Stack.Outputs.Bucket
        BucketWebsiteURL: !GetAtt S3Stack.Outputs.BucketWebsiteURL
        Instance1: !GetAtt EC2Stack1.Outputs.Instance
        Instance2: !GetAtt EC2Stack2.Outputs.Instance
        Prefix: !Ref Prefix
        Repository: myrepo
        WaitForSuccessTimeoutSeconds: 300
