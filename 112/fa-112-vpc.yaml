AWSTemplateFormatVersion: 2010-09-09

Parameters:
  AvailabilityZone1:
    Type: String
    
  AvailabilityZone2:
    Type: String
    
  AvailabilityZone3:
    Type: String
    
  CidrIp1:
    Type: String
    
  CidrIp2:
    Type: String
    
  CidrIp3:
    Type: String
    
  CidrIp4:
    Type: String
    
  HTTPSPort:
    Type: Number
    
  MySQLPort:
    Type: Number
    
  Prefix:
    Type: String

  VPCCidrBlock:
    Type: String
    
    
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true

  InstanceSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}${AvailabilityZone1}"
      CidrBlock: !Ref CidrIp1
      VpcId: !Ref VPC
      
  DBSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}${AvailabilityZone1}"
      CidrBlock: !Ref CidrIp2
      VpcId: !Ref VPC
      
  DBSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}${AvailabilityZone2}"
      CidrBlock: !Ref CidrIp3
      VpcId: !Ref VPC
      
  DBSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Sub "${AWS::Region}${AvailabilityZone3}"
      CidrBlock: !Ref CidrIp4
      VpcId: !Ref VPC
      
  InstanceSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      
  InstanceSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref InstanceSubnet
      RouteTableId: !Ref InstanceSubnetRouteTable
      
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${Prefix}-InstanceSecurityGroup"
      GroupDescription: Deny All.
      VpcId: !Ref VPC

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${Prefix}-DBSecurityGroup"
      GroupDescription: Allow MySQL from Instance.
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref MySQLPort
          ToPort: !Ref MySQLPort
          SourceSecurityGroupId: !Ref InstanceSecurityGroup

  EndpointSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${Prefix}-EndpointSecurityGroup"
      GroupDescription: Allow HTTPS from InstanceSecurityGroup.
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref HTTPSPort
          ToPort: !Ref HTTPSPort
          SourceSecurityGroupId: !Ref InstanceSecurityGroup

          
Outputs:
  InstanceSubnet:
    Value: !Ref InstanceSubnet
    
  DBSubnet1:
    Value: !Ref DBSubnet1
    
  DBSubnet2:
    Value: !Ref DBSubnet2
    
  DBSubnet3:
    Value: !Ref DBSubnet3
  
  InstanceSubnetRouteTable:
    Value: !Ref InstanceSubnetRouteTable
    
  InstanceSecurityGroup:
    Value: !Ref InstanceSecurityGroup

  DBSecurityGroup:
    Value: !Ref DBSecurityGroup
    
  EndpointSecurityGroup:
    Value: !Ref EndpointSecurityGroup
    
  VPC:
    Value: !Ref VPC
