AWSTemplateFormatVersion: 2010-09-09
Parameters:
  AvailabilityZone1:
    Type: String
    
  AvailabilityZone2:
    Type: String
    
  CidrIp1:
    Type: String
    
  CidrIp2:
    Type: String
    
  #CidrIp3:
  #  Type: String
    
  HTTPSPort:
    Type: Number
    
  Prefix:
    Type: String
    
  VPCCidrBlock:
    Type: String
    
  VPCName:
    Type: String


Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true

  #IGW:
  #  Type: AWS::EC2::InternetGateway
  #
  #IGWAttachment:
  #  Type: AWS::EC2::VPCGatewayAttachment
  #  Properties:
  #    VpcId: !Ref VPC
  #    InternetGatewayId: !Ref IGW
      
  #EIP:
  #  Type: AWS::EC2::EIP
  #  Properties:
  #    Domain: vpc
  #        
  #NATGateway:
  #  Type: AWS::EC2::NatGateway
  #  Properties:
  #    AllocationId: !GetAtt EIP.AllocationId
  #    SubnetId: !Ref PublicSubnet
  #    
  #PublicSubnet:
  #  Type: AWS::EC2::Subnet
  #  Properties:
  #    CidrBlock: !Ref CidrIp1
  #    VpcId: !Ref VPC
  #    AvailabilityZone: !Sub ${AWS::Region}${AvailabilityZone1}
      
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref CidrIp1
      VpcId: !Ref VPC
      AvailabilityZone: !Sub ${AWS::Region}${AvailabilityZone1}
      
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref CidrIp2
      VpcId: !Ref VPC
      AvailabilityZone: !Sub ${AWS::Region}${AvailabilityZone2}
      
      
  #PublicRouteTable:
  #  Type: AWS::EC2::RouteTable
  #  Properties:
  #    VpcId: !Ref VPC
  #    
  #RouteToInternet:
  #  Type: AWS::EC2::Route
  #  Properties:
  #    RouteTableId: !Ref PublicRouteTable
  #    DestinationCidrBlock: 0.0.0.0/0
  #    GatewayId: !Ref IGW
  #
  #PublicSubnetRouteTableAssociation:
  #  Type: AWS::EC2::SubnetRouteTableAssociation
  #  Properties:
  #    SubnetId: !Ref PublicSubnet
  #    RouteTableId: !Ref PublicRouteTable
      
      
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      
  #RouteToNATGateway:
  #  Type: AWS::EC2::Route
  #  Properties:
  #    RouteTableId: !Ref PrivateRouteTable
  #    DestinationCidrBlock: 0.0.0.0/0
  #    NatGatewayId: !Ref NATGateway
  #    
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable
      
  #PrivateSubnetRouteTableAssociation2:
  #  Type: AWS::EC2::SubnetRouteTableAssociation
  #  Properties:
  #    SubnetId: !Ref PrivateSubnet2
  #    RouteTableId: !Ref PrivateRouteTable
      
      
  #PrivateRouteTable2:
  #  Type: AWS::EC2::RouteTable
  #  Properties:
  #    VpcId: !Ref VPC
  #    
  #PrivateSubnetRouteTableAssociation2:
  #  Type: AWS::EC2::SubnetRouteTableAssociation
  #  Properties:
  #    SubnetId: !Ref PrivateSubnet2
  #    RouteTableId: !Ref PrivateRouteTable2
      
      
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${Prefix}-${VPCName}-InstanceSecurityGroup"
      GroupDescription: Deny All.
      VpcId: !Ref VPC
      #SecurityGroupIngress:
      #  - IpProtocol: tcp
      #    FromPort: !Ref HTTPPort
      #    ToPort: !Ref HTTPPort
      #    SourceSecurityGroupId: !Ref ALBSecurityGroup
          
  EndpointSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${Prefix}-${VPCName}-EndpointSecurityGroup"
      GroupDescription: Allow HTTPS from InstanceSecurityGroup.
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref HTTPSPort
          ToPort: !Ref HTTPSPort
          SourceSecurityGroupId: !Ref InstanceSecurityGroup
          
          
Outputs:
  VPC:
    Value: !Ref VPC
      
  #PublicSubnet:
  #  Value: !Ref PublicSubnet
  #  Export:
  #    Name: !Sub ${Prefix}-PublicSubnet
      
  PrivateSubnet1:
    Value: !Ref PrivateSubnet1
      
  PrivateSubnet2:
    Value: !Ref PrivateSubnet2
      
  PrivateRouteTable:
    Value: !Ref PrivateRouteTable
      
  #PrivateRouteTable2:
  #  Value: !Ref PrivateRouteTable2
  #  Export:
  #    Name: !Sub ${Prefix}-PrivateRouteTable2
      
  InstanceSecurityGroup:
    Value: !Ref InstanceSecurityGroup
      
  EndpointSecurityGroup:
    Value: !Ref EndpointSecurityGroup