AWSTemplateFormatVersion: 2010-09-09

Parameters:
  ALBSecurityGroup:
    Type: String
    
  HTTPPort:
    Type: Number
    
  Path1:
    Type: String
    
  Path2:
    Type: String
    
  Path3:
    Type: String
    
  Path4:
    Type: String
    
  Prefix:
    Type: String
    
  PublicSubnet1:
    Type: String
    
  PublicSubnet2:
    Type: String
    
  VPC:
    Type: String
    
    
Resources:
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub "${Prefix}-ALB"
      Scheme: internet-facing
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      Type: application
      
  ALBTargetGroup1:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: !Ref Path1
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      Name: !Sub "${Prefix}-ALBTargetGroup1"
      Port: !Ref HTTPPort
      Protocol: HTTP
      #Targets:
      TargetType: instance
      VpcId: !Ref VPC
      
  ALBTargetGroup2:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: !Ref Path2
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      Name: !Sub "${Prefix}-ALBTargetGroup2"
      Port: !Ref HTTPPort
      Protocol: HTTP
      #Targets:
      TargetType: instance
      VpcId: !Ref VPC
      
  ALBTargetGroup3:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: !Ref Path3
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      Name: !Sub "${Prefix}-ALBTargetGroup3"
      Port: !Ref HTTPPort
      Protocol: HTTP
      #Targets:
      TargetType: instance
      VpcId: !Ref VPC
        
  ALBTargetGroup4:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: !Ref Path4
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      Name: !Sub "${Prefix}-ALBTargetGroup4"
      Port: !Ref HTTPPort
      Protocol: HTTP
      #Targets:
      TargetType: instance
      VpcId: !Ref VPC
        
        
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      DefaultActions: 
        - TargetGroupArn: !Ref ALBTargetGroup1
          Type: forward
      LoadBalancerArn: !Ref ALB
      Port: !Ref HTTPPort
      Protocol: HTTP
      
  ALBListenerRule1:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref ALBTargetGroup1
          Type: forward
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - !Sub "${Path1}*"
      ListenerArn: !Ref ALBListener
      Priority: 1
      
  ALBListenerRule2:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref ALBTargetGroup2
          Type: forward
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - !Sub "${Path2}*"
      ListenerArn: !Ref ALBListener
      Priority: 2
      
  ALBListenerRule3:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref ALBTargetGroup3
          Type: forward
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - !Sub "${Path3}*"
      ListenerArn: !Ref ALBListener
      Priority: 3
      
  ALBListenerRule4:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref ALBTargetGroup4
          Type: forward
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - !Sub "${Path4}*"
      ListenerArn: !Ref ALBListener
      Priority: 4
      
      
Outputs:
  ALBResourceLabel:
    Value: !Sub
      - "${LoadBalancerFullName}/${TargetGroupFullName}"
      - LoadBalancerFullName: !GetAtt ALB.LoadBalancerFullName
        TargetGroupFullName: !GetAtt ALBTargetGroup4.TargetGroupFullName

  ALBTargetGroup1:
    Value: !Ref ALBTargetGroup1
    
  ALBTargetGroup2:
    Value: !Ref ALBTargetGroup2
    
  ALBTargetGroup3:
    Value: !Ref ALBTargetGroup3
    
  ALBTargetGroup4:
    Value: !Ref ALBTargetGroup4