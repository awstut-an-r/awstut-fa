AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: [bucket-name]
    
  Prefix:
    Type: String
    Default: fa-155

  IoTCertificateName:
    Type: String
    Default: device.pem.crt
    
  IoTPrivateKeyName:
    Type: String
    Default: private.pem.key
    
  IoTPublicKeyName:
    Type: String
    Default: public.pem.key

  LambdaArchitecture:
    Type: String
    Default: arm64
    
  LambdaHandler:
    Type: String
    Default: index.lambda_handler
    
  LambdaRuntime:
    Type: String
    Default: python3.12
    
  LambdaTimeout:
    Type: Number
    Default: 30

  PublishTopicName:
    Type: String
    Default: test/dc/pubtopic
    
  SubscribeTopicName:
    Type: String
    Default: test/dc/subtopic
    
  UserName:
    Type: String
    Default: awstut
    
  WaitForSuccessTimeoutSeconds:
    Type: Number
    Default: 900
    
    
Resources:
  IoTStack1:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-02-iot-01.yaml"
      Parameters:
        Prefix: !Ref Prefix
        PublishTopicName: !Ref PublishTopicName
        SubscribeTopicName: !Ref SubscribeTopicName
        
  LambdaStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - IoTStack1
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-02-lambda.yaml"
      Parameters:
        ActivationId:
          Fn::ImportValue:
            !Sub "${Prefix}-ActivationId"
        Architecture: !Ref LambdaArchitecture
        BucketName:
          Fn::ImportValue:
            !Sub "${Prefix}-BucketName"
        CertificateName: !Ref IoTCertificateName
        Handler: !Ref LambdaHandler
        Prefix: !Ref Prefix
        PrivateKeyName: !Ref IoTPrivateKeyName
        PublicKeyName: !Ref IoTPublicKeyName
        Runtime: !Ref LambdaRuntime
        Thing: !GetAtt IoTStack1.Outputs.Thing
        Timeout: !Ref LambdaTimeout
        
  IoTStack2:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - LambdaStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-02-iot-02.yaml"
      Parameters:
        CertificateArn: !GetAtt LambdaStack.Outputs.CertificateArn
        Policy: !GetAtt IoTStack1.Outputs.Policy
        Prefix: !Ref Prefix
        Thing: !GetAtt IoTStack1.Outputs.Thing

  SSMStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - LambdaStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-02-ssm.yaml"
      Parameters:
        BucketName:
          Fn::ImportValue:
            !Sub "${Prefix}-BucketName"
        CertificateName: !Ref IoTCertificateName
        Endpoint: !GetAtt LambdaStack.Outputs.IoTEndpoint
        InstanceId: !GetAtt LambdaStack.Outputs.InstanceId
        Prefix: !Ref Prefix
        PrivateKeyName: !Ref IoTPrivateKeyName
        PublicKeyName: !Ref IoTPublicKeyName
        PublishTopicName: !Ref PublishTopicName
        SubscribeTopicName: !Ref SubscribeTopicName
        Thing: !GetAtt IoTStack1.Outputs.Thing
        UserName: !Ref UserName
        WaitForSuccessTimeoutSeconds: !Ref WaitForSuccessTimeoutSeconds
