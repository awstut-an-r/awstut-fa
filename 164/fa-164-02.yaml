AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: awstut-bucket
    
  Prefix:
    Type: String
    Default: fa-164
  
  DynamodbPartitionKey:
    Type: String
    Default: device_id
    
  DynamodbSortKey:
    Type: String
    Default: timestamp

  IoTCertificateName:
    Type: String
    Default: device.pem.crt
    
  IoTClientId:
    Type: String
    Default: awstut

  IoTPrivateKeyName:
    Type: String
    Default: private.pem.key
    
  IoTPublicKeyName:
    Type: String
    Default: public.pem.key

  LambdaArchitecture:
    Type: String
    Default: arm64
    
  LambdaHandler:
    Type: String
    Default: index.lambda_handler
    
  LambdaRuntime:
    Type: String
    Default: python3.12
    
  LambdaTimeout:
    Type: Number
    Default: 30
    
  MailAddress:
    Type: String
    Default: [mail-address]

  UserName:
    Type: String
    Default: awstut
    
  WaitForSuccessTimeoutSeconds:
    Type: Number
    Default: 900
    
    
Resources:
  DynamodbStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-02-dynamodb.yaml"
      Parameters:
        PartitionKey: !Ref DynamodbPartitionKey
        Prefix: !Ref Prefix
        SortKey: !Ref DynamodbSortKey
        
  SNSStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-02-sns.yaml"
      Parameters:
        Architecture: !Ref LambdaArchitecture
        Handler: !Ref LambdaHandler
        MailAddress: !Ref MailAddress
        Prefix: !Ref Prefix
        Runtime: !Ref LambdaRuntime

  IoTStack1:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-02-iot-01.yaml"
      Parameters:
        ClientId: !Ref IoTClientId
        Prefix: !Ref Prefix
        
  LambdaStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - IoTStack1
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-02-lambda.yaml"
      Parameters:
        ActivationId:
          Fn::ImportValue:
            !Sub "${Prefix}-ActivationId"
        Architecture: !Ref LambdaArchitecture
        BucketName:
          Fn::ImportValue:
            !Sub "${Prefix}-BucketName"
        CertificateName: !Ref IoTCertificateName
        Handler: !Ref LambdaHandler
        Prefix: !Ref Prefix
        PrivateKeyName: !Ref IoTPrivateKeyName
        PublicKeyName: !Ref IoTPublicKeyName
        Runtime: !Ref LambdaRuntime
        Thing: !GetAtt IoTStack1.Outputs.Thing
        Timeout: !Ref LambdaTimeout
        
  IoTStack2:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - LambdaStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-02-iot-02.yaml"
      Parameters:
        CertificateArn: !GetAtt LambdaStack.Outputs.CertificateArn
        Policy: !GetAtt IoTStack1.Outputs.Policy
        Prefix: !Ref Prefix
        Thing: !GetAtt IoTStack1.Outputs.Thing
        
  IoTStack3:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - DynamodbStack
      - SNSStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-02-iot-03.yaml"
      Parameters:
        Function3Arn: !GetAtt SNSStack.Outputs.Function3Arn
        PartitionKey: !Ref DynamodbPartitionKey
        Prefix: !Ref Prefix
        SnsTopicArn: !GetAtt SNSStack.Outputs.TopicArn
        SortKey: !Ref DynamodbSortKey
        Table: !GetAtt DynamodbStack.Outputs.Table
        TopicName: !Sub
          - "$aws/things/${Thing}/shadow/update/accepted"
          - Thing: !GetAtt IoTStack1.Outputs.Thing
        
  SSMStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - LambdaStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-02-ssm.yaml"
      Parameters:
        BucketName:
          Fn::ImportValue:
            !Sub "${Prefix}-BucketName"
        CertificateName: !Ref IoTCertificateName
        ClientId: !Ref IoTClientId
        Endpoint: !GetAtt LambdaStack.Outputs.IoTEndpoint
        InstanceId: !GetAtt LambdaStack.Outputs.InstanceId
        Prefix: !Ref Prefix
        PrivateKeyName: !Ref IoTPrivateKeyName
        PublicKeyName: !Ref IoTPublicKeyName
        Thing: !GetAtt IoTStack1.Outputs.Thing
        UserName: !Ref UserName
        WaitForSuccessTimeoutSeconds: !Ref WaitForSuccessTimeoutSeconds
