AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: awstut-bucket
    
  Prefix:
    Type: String
    Default: fa-018
    
  HTTPPort:
    Type: Number
    Default: 80
    
  HTTPSPort:
    Type: Number
    Default: 443
    
  ServiceCpu:
    Type: Number
    Default: 512
    
  ServiceMemory:
    Type: Number
    Default: 1024


Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc.yaml"
      Parameters:
        AvailabilityZone1: a
        AvailabilityZone2: d
        CidrIp1: 10.0.1.0/24
        CidrIp2: 10.0.2.0/24
        #CidrIp3: 10.0.3.0/24
        #CidrIp4: 10.0.4.0/24
        HTTPPort: !Ref HTTPPort
        #HTTPSPort: !Ref HTTPSPort
        Prefix: !Ref Prefix
        VPCCidrBlock: 10.0.0.0/16

  #EndpointStack:
  #  Type: AWS::CloudFormation::Stack
  #  DependsOn:
  #    - VPCStack
  #  Properties:
  #    TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-endpoint.yaml"
  #    Parameters:
  #      EndpointSecurityGroup: !GetAtt VPCStack.Outputs.EndpointSecurityGroup
  #      Prefix: !Ref Prefix
  #      PrivateRouteTable: !GetAtt VPCStack.Outputs.PrivateRouteTable
  #      PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
  #      PrivateSubnet2: !GetAtt VPCStack.Outputs.PrivateSubnet2
  #      VPC: !GetAtt VPCStack.Outputs.VPC
        
  #ECRStack:
  #  Type: AWS::CloudFormation::Stack
  #  Properties:
  #    TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ecr.yaml"
  #    Parameters:
  #      Prefix: !Ref Prefix
        
  FargateStack:
    Type: AWS::CloudFormation::Stack
    #DependsOn:
    #  - EndpointStack
    #  - ECRStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-fargate.yaml"
      Parameters:
        Prefix: !Ref Prefix
        
  FargateService1Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      #- EndpointStack
      #- ECRStack
      - FargateStack
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-fargate-service1.yaml"
      Parameters:
        Cluster: !GetAtt FargateStack.Outputs.Cluster
        FargateTaskExecutionRole: !GetAtt FargateStack.Outputs.FargateTaskExecutionRole
        #MyServiceRepository: !GetAtt ECRStack.Outputs.MyServiceRepository
        Prefix: !Ref Prefix
        ServiceCpu: !Ref ServiceCpu
        ServiceMemory: !Ref ServiceMemory
        ServiceName: service1
        ServiceSecurityGroup: !GetAtt VPCStack.Outputs.ServiceSecurityGroup
        #PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
        PublicSubnet1: !GetAtt VPCStack.Outputs.PublicSubnet1
        
  FargateService2Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      #- EndpointStack
      #- ECRStack
      - FargateStack
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-fargate-service2.yaml"
      Parameters:
        Cluster: !GetAtt FargateStack.Outputs.Cluster
        FargateTaskExecutionRole: !GetAtt FargateStack.Outputs.FargateTaskExecutionRole
        #MyServiceRepository: !GetAtt ECRStack.Outputs.MyServiceRepository
        MyServiceRepository:
          Fn::ImportValue: !Sub "${Prefix}-MyServiceRepository"
        Prefix: !Ref Prefix
        ServiceCpu: !Ref ServiceCpu
        ServiceMemory: !Ref ServiceMemory
        ServiceName: service2
        ServiceSecurityGroup: !GetAtt VPCStack.Outputs.ServiceSecurityGroup
        #PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
        #PublicSubnet1: !GetAtt VPCStack.Outputs.PublicSubnet1
        PublicSubnet2: !GetAtt VPCStack.Outputs.PublicSubnet2