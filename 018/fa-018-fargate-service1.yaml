AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Cluster:
    Type: String
    
  FargateTaskExecutionRole:
    Type: String
    
  #MyServiceRepository:
  #  Type: String
    
  Prefix:
    Type: String
    
  ServiceCpu:
    Type: Number
    
  ServiceMemory:
    Type: Number
    
  ServiceName:
    Type: String
    
  ServiceSecurityGroup:
    Type: String
    
  #PrivateSubnet1:
  #  Type: String
  
  PublicSubnet1:
    Type: String
    

Resources:
  TaskDefinition1:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - FARGATE
      Cpu: !Ref ServiceCpu
      Memory: !Ref ServiceMemory
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref FargateTaskExecutionRole
      TaskRoleArn: !Ref TaskRole1
      ContainerDefinitions:
        - Name: !Sub "${Prefix}-${ServiceName}-container"
          #Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${MyServiceRepository}:latest"
          Image: nginx:latest
          #LogConfiguration:
          #  LogDriver: awslogs
          #  Options:
          #    awslogs-group:
          #      Fn::ImportValue: !Sub ${Prefix}-LogGroup1
          #    awslogs-region: !Ref AWS::Region
          #    awslogs-stream-prefix: app
          #Environment:
          #  - Name: QueueName
          #    Value:
          #      Fn::ImportValue: !Sub ${Prefix}-QueueName
                
  #MyService:
  Service1:
    Type: AWS::ECS::Service
    Properties:
      #Cluster: !Ref Cluster1
      Cluster: !Ref Cluster
      LaunchType: FARGATE
      DesiredCount: 1
      TaskDefinition: !Ref TaskDefinition1
      ServiceName: !Sub "${Prefix}-${ServiceName}-service"
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref ServiceSecurityGroup
          Subnets:
            - !Ref PublicSubnet1
            #- !Ref PrivateSubnet1

  TaskRole1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      #Policies:
      #  - PolicyName: AllowSQSSendMessage
      #    PolicyDocument:
      #      Version: 2012-10-17
      #      Statement:
      #        - Effect: Allow
      #          Action:
      #            - sqs:GetQueueUrl
      #            - sqs:SendMessage
      #          Resource:
      #            - Fn::ImportValue: !Sub ${Prefix}-QueueArn
