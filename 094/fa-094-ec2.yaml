AWSTemplateFormatVersion: 2010-09-09

Parameters:
  AppSecurityGroup:
    Type: String

  AppSubnet:
    Type: String

  HTTPPort:
    Type: Number

  ImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    
  #InstanceSecurityGroup1:
  #  Type: String
  #  
  #InstanceSecurityGroup2:
  #  Type: String
  
  InstanceProfile:
    Type: String
    
  #InstanceTagKey:
  #  Type: String
  #  
  #InstanceTagValueWeb1:
  #  Type: String
  #  
  #InstanceTagValueWeb2:
  #  Type: String
    
  InstanceType:
    Type: String
    
  #PlaybookBucket:
  #  Type: String
    
  Prefix:
    Type: String
    
  #PublicSubnet1:
  #  Type: String
  #  
  #PublicSubnet2:
  #  Type: String
    
  #PrivateSubnet1:
  #  Type: String
  #  
  #PrivateSubnet2:
  #  Type: String
  
  VPC:
    Type: String


Resources:
  Instance:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref InstanceProfile
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      NetworkInterfaces:
        - DeviceIndex: 0
          #AssociatePublicIpAddress: true
          SubnetId: !Ref AppSubnet
          GroupSet:
            - !Ref AppSecurityGroup
      #Tags:
      #  - Key: !Ref InstanceTagKey
      #    Value: !Ref InstanceTagValueWeb1
      #UserData: !Base64 |
      #  #!/bin/bash -xe
      #  yum update -y
      #  yum install -y httpd
      #  systemctl start httpd
      #  systemctl enable httpd
      #  ec2-metadata -i > /var/www/html/index.html
      
  #Instance2:
  #  Type: AWS::EC2::Instance
  #  Properties:
  #    IamInstanceProfile: !Ref InstanceProfile
  #    ImageId: !Ref ImageId
  #    InstanceType: !Ref InstanceType
  #    NetworkInterfaces:
  #      - DeviceIndex: 0
  #        #AssociatePublicIpAddress: true
  #        SubnetId: !Ref PrivateSubnet1
  #        GroupSet:
  #          - !Ref InstanceSecurityGroup2
            
  #InstanceProfile:
  #  Type: AWS::IAM::InstanceProfile
  #  Properties:
  #    Path: /
  #    Roles:
  #      - !Ref InstanceRole
  #
  #InstanceRole:
  #  Type: AWS::IAM::Role
  #  DeletionPolicy: Delete
  #  Properties:
  #    AssumeRolePolicyDocument:
  #      Version: 2012-10-17
  #      Statement:
  #        - Effect: Allow
  #          Action: sts:AssumeRole
  #          Principal:
  #            Service:
  #              - ec2.amazonaws.com
  #    Policies:
  #      - PolicyName: SSMStateManagerPolicy
  #        PolicyDocument:
  #          Version: 2012-10-17
  #          Statement:
  #            - Effect: Allow
  #              Action:
  #                - s3:GetObject
  #                - s3:PutObject
  #                - s3:PutObjectAcl
  #                - s3:ListBucket
  #              Resource:
  #                - !Sub "arn:aws:s3:::${PlaybookBucket}"
  #                - !Sub "arn:aws:s3:::${PlaybookBucket}/*"
  #                #- !Sub
  #                #  - ${S3Bucket}
  #                #  - S3Bucket:
  #                #      Fn::ImportValue: !Sub ${Prefix}-S3BucketArn
  #                #- !Sub
  #                #  - ${S3Bucket}/*
  #                #  - S3Bucket:
  #                #      Fn::ImportValue: !Sub ${Prefix}-S3BucketArn
  #    ManagedPolicyArns:
  #      - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
            
            
#Outputs:
#  Instance1:
#    Value: !Ref Instance1
#    
#  #Instance2:
#  #  Value: !Ref Instance2