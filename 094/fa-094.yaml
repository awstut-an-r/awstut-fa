AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: awstut-bucket
    
  Prefix:
    Type: String
    Default: fa-094
    
  AvailabilityZone1:
    Type: String
    Default: a
    
  AvailabilityZone2:
    Type: String
    Default: d
    
  DBUser:
    Type: String
    Default: testuser
  
  DBPassword:
    Type: String
    Default: Passw0rd
    
  DBName:
    Type: String
    Default: testdb
    
  DBTableName:
    Type: String
    Default: testtable
    
  FunctionArchitecture:
    Type: String
    Default: arm64
    
  FunctionEphemeralStorageSize:
    Type: Number
    Default: 512
    
  FunctionHandler:
    Type: String
    Default: index.lambda_handler
    
  FunctionLayerPackage:
    Type: String
    Default: layer.zip
    
  FunctionRuntime:
    Type: String
    Default: python3.8
    
  FunctionTimeout:
    Type: Number
    Default: 300
    
  HTTPPort:
    Type: Number
    Default: 80
    
  InstanceImageId:
    Type: String
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2
    
  InstanceSize:
    Type: Number
    Default: 2
    
  InstanceTagKey:
    Type: String
    Default: Server
    
  InstanceTagValueApp:
    Type: String
    Default: App
    
  InstanceTagValueWeb:
    Type: String
    Default: ApacheWeb
    
  InstanceType:
    Type: String
    Default: t4g.micro
    
  MySQLPort:
    Type: Number
    Default: 3306
  
  UWSGIPort:
    Type: Number
    Default: 9090
    
    
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-vpc.yaml"
      Parameters:
        AvailabilityZone1: !Ref AvailabilityZone1
        AvailabilityZone2: !Ref AvailabilityZone2
        CidrIp1: 10.0.1.0/24
        CidrIp2: 10.0.2.0/24
        CidrIp3: 10.0.3.0/24
        CidrIp4: 10.0.4.0/24
        CidrIp5: 10.0.5.0/24
        CidrIp6: 10.0.6.0/24
        CidrIp7: 10.0.7.0/24
        CidrIp8: 10.0.8.0/24
        CidrIp9: 10.0.9.0/24
        HTTPPort: !Ref HTTPPort
        MySQLPort: !Ref MySQLPort
        #HTTPSPort: !Ref HTTPSPort
        Prefix: !Ref Prefix
        #UWSGIPort: !Ref UWSGIPort
        VPCCidrBlock: 10.0.0.0/16
        
  AuroraStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-aurora.yaml"
      Parameters:
        AvailabilityZone1: !Ref AvailabilityZone1
        AvailabilityZone2: !Ref AvailabilityZone2
        DBEngine: aurora-mysql
        DBEngineVersion: 8.0.mysql_aurora.3.01.0
        DBInstanceClass: db.t4g.medium
        DBName: !Ref DBName
        DBPassword: !Ref DBPassword
        DBSecurityGroup: !GetAtt VPCStack.Outputs.DBSecurityGroup
        DBSubnet1: !GetAtt VPCStack.Outputs.DBSubnet1
        DBSubnet2: !GetAtt VPCStack.Outputs.DBSubnet2
        DBTableName: testtable
        DBUser: !Ref DBUser
        #DBFamily: aurora5.7
        
        FunctionArchitecture: !Ref FunctionArchitecture
        FunctionEphemeralStorageSize: !Ref FunctionEphemeralStorageSize
        FunctionHandler: !Ref FunctionHandler
        FunctionLayerBucket: !Ref TemplateBucketName
        FunctionLayerBucketFolder: !Ref Prefix
        FunctionLayerPackage: !Ref FunctionLayerPackage
        FunctionRuntime: !Ref FunctionRuntime
        FunctionSecurityGroup: !GetAtt VPCStack.Outputs.FunctionSecurityGroup
        FunctionSubnet: !GetAtt VPCStack.Outputs.FunctionSubnet
        FunctionTimeout: !Ref FunctionTimeout
        
        MySQLPort: !Ref MySQLPort
        Prefix: !Ref Prefix
        
  #LambdaStack:
  #  Type: AWS::CloudFormation::Stack
  #  DependsOn:
  #    - AuroraStack
  #  Properties:
  #    TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-lambda.yaml"
  #    Parameters:
  #      Architecture: !Ref FunctionArchitecture
  #      DBName: !Ref DBName
  #      DBPassword: !Ref DBPassword
  #      DBTableName: !Ref DBTableName
  #      DBUser: !Ref DBUser
  #      DBWriteEndpointAddress: !GetAtt AuroraStack.Outputs.DBWriteEndpointAddress
  #      EphemeralStorageSize: !Ref FunctionEphemeralStorageSize
  #      FunctionSecurityGroup: !GetAtt VPCStack.Outputs.FunctionSecurityGroup
  #      FunctionSubnet: !GetAtt VPCStack.Outputs.FunctionSubnet
  #      Handler: !Ref FunctionHandler
  #      LayerBucket: !Ref TemplateBucketName
  #      LayerBucketFolder: !Ref Prefix
  #      LayerPackage: !Ref FunctionLayerPackage
  #      MySQLPort: !Ref MySQLPort
  #      Prefix: !Ref Prefix
  #      Runtime: !Ref FunctionRuntime
  #      Timeout: !Ref FunctionTimeout
        
  # test stack
  #EC2Stack:
  #  Type: AWS::CloudFormation::Stack
  #  DependsOn:
  #    - LambdaStack
  #  Properties:
  #    TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ec2.yaml"
  #    Parameters:
  #      AppSecurityGroup: !GetAtt VPCStack.Outputs.AppSecurityGroup
  #      AppSubnet: !GetAtt VPCStack.Outputs.AppSubnet1
  #      HTTPPort: !Ref HTTPPort
  #      InstanceImageId: !Ref InstanceImageId
  #      #InstanceSecurityGroup1: !GetAtt VPCStack.Outputs.InstanceSecurityGroup1
  #      #InstanceSecurityGroup2: !GetAtt VPCStack.Outputs.InstanceSecurityGroup2
  #      InstanceProfile: !GetAtt IAMStack.Outputs.InstanceProfile
  #      #InstanceTagKey: !Ref InstanceTagKey
  #      #InstanceTagValueWeb1: !Ref InstanceTagValueWeb1
  #      #InstanceTagValueWeb2: !Ref InstanceTagValueWeb2
  #      InstanceType: !Ref InstanceType
  #      #PlaybookBucket: !Ref TemplateBucketName
  #      Prefix: !Ref Prefix
  #      #PublicSubnet1: !GetAtt VPCStack.Outputs.PublicSubnet1
  #      #PublicSubnet2: !GetAtt VPCStack.Outputs.PublicSubnet2
  #      #PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
  #      #PrivateSubnet2: !GetAtt VPCStack.Outputs.PrivateSubnet2
  #      VPC: !GetAtt VPCStack.Outputs.VPC
  
  
  
  NLBStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-nlb.yaml"
      Parameters:
        AppSubnet1: !GetAtt VPCStack.Outputs.AppSubnet1
        AppSubnet2: !GetAtt VPCStack.Outputs.AppSubnet2
        #Instance1: !GetAtt EC2Stack.Outputs.Instance1
        #Instance2: !GetAtt EC2Stack.Outputs.Instance2
        Prefix: !Ref Prefix
        #PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
        #PrivateSubnet2: !GetAtt VPCStack.Outputs.PrivateSubnet2
        UWSGIPort: !Ref UWSGIPort
        VPC: !GetAtt VPCStack.Outputs.VPC
        HealthyThresholdCount: 2
        UnhealthyThresholdCount: 2
        HealthCheckIntervalSeconds: 10
    
  IAMStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-iam.yaml"
      Parameters:
        SSMBucket: !Ref TemplateBucketName
        
  AppAutoScalingStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - AuroraStack
      - IAMStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-autoscaling-app.yaml"
      Parameters:
        AppSecurityGroup: !GetAtt VPCStack.Outputs.AppSecurityGroup
        #AppSecurityGroupGroupId: !GetAtt VPCStack.Outputs.AppSecurityGroupGroupId
        AppSubnet1: !GetAtt VPCStack.Outputs.AppSubnet1
        AppSubnet2: !GetAtt VPCStack.Outputs.AppSubnet2
        DesiredCapacity: !Ref InstanceSize
        FunctionHandler: !Ref FunctionHandler
        FunctionRuntime: !Ref FunctionRuntime
        InstanceImageId: !Ref InstanceImageId
        InstanceProfileArn: !GetAtt IAMStack.Outputs.InstanceProfileArn
        InstanceTagKey: !Ref InstanceTagKey
        InstanceTagValueApp: !Ref InstanceTagValueApp
        InstanceType: !Ref InstanceType
        MaxSize: !Ref InstanceSize
        MinSize: !Ref InstanceSize
        NLBLoadBalancerName: !GetAtt NLBStack.Outputs.NLBLoadBalancerName
        #NLBPrivateAddress1: !GetAtt LambdaStack.Outputs.NLBPrivateAddress1
        #NLBPrivateAddress2: !GetAtt LambdaStack.Outputs.NLBPrivateAddress2
        NLBTargetGroup: !GetAtt NLBStack.Outputs.NLBTargetGroup
        Prefix: !Ref Prefix
        UWSGIPort: !Ref UWSGIPort
        #VPC: !GetAtt VPCStack.Outputs.VPC

  ALBStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - VPCStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-alb.yaml"
      Parameters:
        ALBSecurityGroup: !GetAtt VPCStack.Outputs.ALBSecurityGroup
        HTTPPort: !Ref HTTPPort
        Prefix: !Ref Prefix
        PublicSubnet1: !GetAtt VPCStack.Outputs.PublicSubnet1
        PublicSubnet2: !GetAtt VPCStack.Outputs.PublicSubnet2
        VPC: !GetAtt VPCStack.Outputs.VPC
        
        HealthyThresholdCount: 5
        UnhealthyThresholdCount: 2
        HealthCheckTimeoutSeconds: 5
        HealthCheckIntervalSeconds: 30
        HttpCode: 200
        
  WebAutoScalingStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - ALBStack
      - IAMStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-autoscaling-web.yaml"
      Parameters:
        #AlarmEvaluationPeriod: 2
        #AlarmPeriod: 60
        #AlarmThreshold: 30
        #ALBSecurityGroup: !GetAtt ALBStack.Outputs.ALBSecurityGroup
        ALBTargetGroup: !GetAtt ALBStack.Outputs.ALBTargetGroup
        #Cooldown: 300
        DesiredCapacity: !Ref InstanceSize
        #HTTPPort: !Ref HTTPPort
        InstanceImageId: !Ref InstanceImageId
        InstanceProfileArn: !GetAtt IAMStack.Outputs.InstanceProfileArn
        #InstanceSecurityGroup: !GetAtt VPCStack.Outputs.InstanceSecurityGroup
        InstanceTagKey: !Ref InstanceTagKey
        InstanceTagValueWeb: !Ref InstanceTagValueWeb
        InstanceType: !Ref InstanceType
        MaxSize: !Ref InstanceSize
        MinSize: !Ref InstanceSize
        Prefix: !Ref Prefix
        #PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1
        #PrivateSubnet2: !GetAtt VPCStack.Outputs.PrivateSubnet2
        #ScalingAdjustment1: 1
        #ScalingAdjustment2: -1
        #TargetTrackingConfigurationTargetValue: 50.0
        WebSecurityGroup: !GetAtt VPCStack.Outputs.WebSecurityGroup
        WebSubnet1: !GetAtt VPCStack.Outputs.WebSubnet1
        WebSubnet2: !GetAtt VPCStack.Outputs.WebSubnet2
  
  SSMStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - AppAutoScalingStack
      - WebAutoScalingStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-ssm.yaml"
      Parameters:
        DBName: !Ref DBName
        DBPassword: !Ref DBPassword
        DBReadEndpointAddress: !GetAtt AuroraStack.Outputs.DBReadEndpointAddress
        DBTableName: testtable
        DBUser: !Ref DBUser
        DBWriteEndpointAddress: !GetAtt AuroraStack.Outputs.DBWriteEndpointAddress
        #Instance: !GetAtt EC2Stack.Outputs.Instance
        InstanceTagKey: !Ref InstanceTagKey
        InstanceTagValueApp: !Ref InstanceTagValueApp
        InstanceTagValueWeb: !Ref InstanceTagValueWeb
        MySQLPort: !Ref MySQLPort
        NLBDNSName: !GetAtt NLBStack.Outputs.NLBDNSName
        PlaybookBucket: !Ref TemplateBucketName
        PlaybookFileName: playbook.yml
        PlaybookPackageName: playbook.zip
        Prefix: !Ref Prefix
        UWSGIPort: !Ref UWSGIPort
        WaitForSuccessTimeoutSeconds: 600