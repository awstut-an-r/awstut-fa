AWSTemplateFormatVersion: 2010-09-09

Parameters:
  ALBSecurityGroup:
    Type: String
    
  CustomHeaderFieldNameJsonKey:
    Type: String
    
  CustomHeaderFieldName:
    Type: String
    
  CustomHeaderFieldValueJsonKey:
    Type: String
    
  HTTPPort:
    Type: Number
    
  Instance1:
    Type: String
    
  Instance2:
    Type: String
    
  Prefix:
    Type: String
    
  PublicSubnet1:
    Type: String
    
  PublicSubnet2:
    Type: String
    
  Secret:
    Type: String
    
  VPC:
    Type: String
    
  HealthyThresholdCount:
    Type: Number
    
  UnhealthyThresholdCount:
    Type: Number
    
  HealthCheckTimeoutSeconds:
    Type: Number
    
  HealthCheckIntervalSeconds:
    Type: Number
    
  HttpCode:
    Type: Number


Resources:
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub "${Prefix}-ALB"
      Scheme: internet-facing
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      Type: application

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VPC
      Name: !Sub "${Prefix}-ALBTargetGroup"
      Protocol: HTTP
      Port: !Ref HTTPPort
      HealthCheckProtocol: HTTP
      HealthCheckPath: /
      HealthCheckPort: traffic-port
      HealthyThresholdCount: !Ref HealthyThresholdCount
      UnhealthyThresholdCount: !Ref UnhealthyThresholdCount
      HealthCheckTimeoutSeconds: !Ref HealthCheckTimeoutSeconds
      HealthCheckIntervalSeconds: !Ref HealthCheckIntervalSeconds
      Matcher: 
        HttpCode: !Ref HttpCode
      Targets:
        - Id: !Ref Instance1
        - Id: !Ref Instance2
        
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      DefaultActions: 
        - FixedResponseConfig:
            ContentType: text/plain
            MessageBody: Access denied
            StatusCode: 403
          Type: fixed-response
      LoadBalancerArn: !Ref ALB
      Port: !Ref HTTPPort
      Protocol: HTTP
      
  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties: 
      Actions: 
        - TargetGroupArn: !Ref ALBTargetGroup
          Type: forward
      Conditions: 
        - Field: http-header
          HttpHeaderConfig:
            HttpHeaderName: !Sub "{{resolve:secretsmanager:${Secret}:SecretString:${CustomHeaderFieldNameJsonKey}}}"
            Values: 
              - !Sub "{{resolve:secretsmanager:${Secret}:SecretString:${CustomHeaderFieldValueJsonKey}}}"
      ListenerArn: !Ref ALBListener
      Priority: 1


Outputs:
  ALBDNSName:
    Value: !GetAtt ALB.DNSName
