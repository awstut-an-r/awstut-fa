AWSTemplateFormatVersion: 2010-09-09

Parameters:
  TemplateBucketName:
    Type: String
    Default: awstut-bucket
    
  Prefix:
    Type: String
    Default: fa-157
    
  #ClientName:
  #  Type: String
  #  Default: test-client
    
  #InstanceImageId:
  #  Type: String
  #  #Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2
  #  Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-arm64
  #  
  #InstanceType:
  #  Type: String
  #  Default: t4g.nano
    
  #IoTAppDir:
  #  Type: String
  #  Default: testconn
  #  
  #IoTCertificateDir:
  #  Type: String
  #  Default: certs
    
  IoTCertificateName:
    Type: String
    Default: device.pem.crt
    
  #IoTJobDocumentName:
  #  Type: String
  #  Default: hello-world-job.json
    
  IoTPrivateKeyName:
    Type: String
    Default: private.pem.key
    
  IoTPublicKeyName:
    Type: String
    Default: public.pem.key
    
  #IoTRootCertificateName:
  #  Type: String
  #  Default: AmazonRootCA1.pem
    
  #LambdaArchitecture:
  #  Type: String
  #  Default: arm64
  
  LambdaArchitecture:
    Type: String
    Default: arm64
    
  LambdaHandler:
    Type: String
    Default: index.lambda_handler
    
  LambdaRuntime:
    Type: String
    Default: python3.12
    
  LambdaTimeout:
    Type: Number
    Default: 30
    
  #NodeId:
  #  Type: String
  #  Default: [node-id]
  
  #PublishTopicName:
  #  Type: String
  #  #Default: test/topic
  #  Default: test/pubtopic
  #  
  #SubscribeTopicName:
  #  Type: String
  #  Default: test/subtopic
    
  #TopicName:
  #  Type: String
  #  Default: "*"
    #Default: device/+/details
    
  UserName:
    Type: String
    Default: awstut
    
  WaitForSuccessTimeoutSeconds:
    Type: Number
    Default: 900
    
    
Resources:
  #S3Stack:
  #  Type: AWS::CloudFormation::Stack
  #  Properties:
  #    TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-02-s3.yaml"
  #    Parameters:
  #      #Handler: !Ref LambdaHandler
  #      Prefix: !Ref Prefix
  #      #Runtime: !Ref LambdaRuntime

  IoTStack1:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-02-iot-01.yaml"
      Parameters:
        #ClientName: !Ref ClientName
        Prefix: !Ref Prefix
        #TopicName: !Ref TopicName
        #PublishTopicName: !Ref PublishTopicName
        #SubscribeTopicName: !Ref SubscribeTopicName
        
  LambdaStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      #- S3Stack
      - IoTStack1
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-02-lambda.yaml"
      Parameters:
        ActivationId:
          Fn::ImportValue:
            !Sub "${Prefix}-ActivationId"
        Architecture: !Ref LambdaArchitecture
        #BucketName: !GetAtt S3Stack.Outputs.BucketName
        BucketName:
          Fn::ImportValue:
            !Sub "${Prefix}-BucketName"
        CertificateName: !Ref IoTCertificateName
        Handler: !Ref LambdaHandler
        #JobDocumentName: !Ref IoTJobDocumentName
        Prefix: !Ref Prefix
        PrivateKeyName: !Ref IoTPrivateKeyName
        PublicKeyName: !Ref IoTPublicKeyName
        Runtime: !Ref LambdaRuntime
        Thing: !GetAtt IoTStack1.Outputs.Thing
        Timeout: !Ref LambdaTimeout
        
  IoTStack2:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - LambdaStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-02-iot-02.yaml"
      Parameters:
        CertificateArn: !GetAtt LambdaStack.Outputs.CertificateArn
        #ClientName: !Ref ClientName
        Policy: !GetAtt IoTStack1.Outputs.Policy
        Prefix: !Ref Prefix
        Thing: !GetAtt IoTStack1.Outputs.Thing
        #TopicName: !Ref TopicName
        
  SSMStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - LambdaStack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-02-ssm.yaml"
      Parameters:
        #AppDir: !Ref IoTAppDir
        BucketName:
          Fn::ImportValue:
            !Sub "${Prefix}-BucketName"
        #CertificateDir: !Ref CertificateDir
        CertificateName: !Ref IoTCertificateName
        Endpoint: !GetAtt LambdaStack.Outputs.IoTEndpoint
        #NodeId: !Ref NodeId
        #InstanceId:
        #  Fn::ImportValue:
        #    !Sub "${Prefix}-InstanceId"
        InstanceId: !GetAtt LambdaStack.Outputs.InstanceId
        Prefix: !Ref Prefix
        PrivateKeyName: !Ref IoTPrivateKeyName
        PublicKeyName: !Ref IoTPublicKeyName
        #PublishTopicName: !Ref PublishTopicName
        #SubscribeTopicName: !Ref SubscribeTopicName
        Thing: !GetAtt IoTStack1.Outputs.Thing
        #TopicName: !Ref TopicName
        UserName: !Ref UserName
        WaitForSuccessTimeoutSeconds: !Ref WaitForSuccessTimeoutSeconds

  #LambdaStack2:
  #  Type: AWS::CloudFormation::Stack
  #  DependsOn:
  #    - SSMStack
  #  Properties:
  #    TemplateURL: !Sub "https://${TemplateBucketName}.s3.${AWS::Region}.amazonaws.com/${Prefix}/${Prefix}-02-lambda-02.yaml"
  #    Parameters:
  #      Architecture: !Ref LambdaArchitecture
  #      BucketName:
  #        Fn::ImportValue:
  #          !Sub "${Prefix}-BucketName"
  #      Handler: !Ref LambdaHandler
  #      JobDocumentName: !Ref IoTJobDocumentName
  #      Prefix: !Ref Prefix
  #      Runtime: !Ref LambdaRuntime
  #      Thing: !GetAtt IoTStack1.Outputs.Thing